services:
  redis:
    image: redis:alpine
    container_name: partner_management_redis
    restart: unless-stopped
    ports:
      - "6380:6379" # ini untuk akses dari host
    networks:
      - laravel


  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: partner_management_app
    restart: unless-stopped
    volumes:
      - .:/var/www
    networks:
      - laravel
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

  webserver:
    image: nginx:alpine
    container_name: nginx_web
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - .:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app
      - db
    networks:
      - laravel

  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: partner_management
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    restart: unless-stopped
    ports:
      - "8083:80"
    environment:
      PMA_HOST: mysql_db
      PMA_USER: laravel
      PMA_PASSWORD: secret
    depends_on:
      - db
    networks:
      - laravel

networks:
  laravel:
    driver: bridge


volumes:
  db_data:
    external: true
